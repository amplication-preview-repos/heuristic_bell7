/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MapObject as PrismaMapObject } from "@prisma/client";

export class MapObjectServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MapObjectCountArgs, "select">
  ): Promise<number> {
    return this.prisma.mapObject.count(args);
  }

  async mapObjects(
    args: Prisma.MapObjectFindManyArgs
  ): Promise<PrismaMapObject[]> {
    return this.prisma.mapObject.findMany(args);
  }
  async mapObject(
    args: Prisma.MapObjectFindUniqueArgs
  ): Promise<PrismaMapObject | null> {
    return this.prisma.mapObject.findUnique(args);
  }
  async createMapObject(
    args: Prisma.MapObjectCreateArgs
  ): Promise<PrismaMapObject> {
    return this.prisma.mapObject.create(args);
  }
  async updateMapObject(
    args: Prisma.MapObjectUpdateArgs
  ): Promise<PrismaMapObject> {
    return this.prisma.mapObject.update(args);
  }
  async deleteMapObject(
    args: Prisma.MapObjectDeleteArgs
  ): Promise<PrismaMapObject> {
    return this.prisma.mapObject.delete(args);
  }
}
